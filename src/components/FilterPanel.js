import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
export default function FilterPanel({ onClose, onApply }) {
    const [filters, setFilters] = useState({
        title: false,
        cricos: false,
        qualification: true,
    });
    const [qualification, setQualification] = useState("Certificate IV");
    const toggleFilter = (key) => {
        setFilters({ ...filters, [key]: !filters[key] });
    };
    return (_jsx("div", { className: "absolute right-0 mt-2 w-[300px] bg-white border rounded-lg shadow-lg p-4 text-sm z-50", children: _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { children: "Title" }), _jsxs("label", { className: "inline-flex items-center cursor-pointer", children: [_jsx("input", { type: "checkbox", checked: filters.title, onChange: () => toggleFilter("title"), className: "sr-only peer" }), _jsx("div", { className: "w-9 h-5 bg-gray-200 rounded-full peer peer-checked:bg-indigo-600 relative transition", children: _jsx("div", { className: "absolute left-1 top-0.5 w-4 h-4 bg-white rounded-full transition peer-checked:translate-x-4" }) })] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { children: "CRICOS Code" }), _jsxs("label", { className: "inline-flex items-center cursor-pointer", children: [_jsx("input", { type: "checkbox", checked: filters.cricos, onChange: () => toggleFilter("cricos"), className: "sr-only peer" }), _jsx("div", { className: "w-9 h-5 bg-gray-200 rounded-full peer peer-checked:bg-indigo-600 relative transition", children: _jsx("div", { className: "absolute left-1 top-0.5 w-4 h-4 bg-white rounded-full transition peer-checked:translate-x-4" }) })] })] }), _jsxs("div", { children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsx("span", { children: "Qualification Level" }), _jsxs("label", { className: "inline-flex items-center cursor-pointer", children: [_jsx("input", { type: "checkbox", checked: filters.qualification, onChange: () => toggleFilter("qualification"), className: "sr-only peer" }), _jsx("div", { className: "w-9 h-5 bg-gray-200 rounded-full peer peer-checked:bg-indigo-600 relative transition", children: _jsx("div", { className: "absolute left-1 top-0.5 w-4 h-4 bg-white rounded-full transition peer-checked:translate-x-4" }) })] })] }), filters.qualification && (_jsxs("select", { value: qualification, onChange: (e) => setQualification(e.target.value), className: "w-full border rounded-md px-3 py-2 text-sm focus:outline-none", children: [_jsx("option", { children: "Certificate I" }), _jsx("option", { children: "Certificate II" }), _jsx("option", { children: "Certificate III" }), _jsx("option", { children: "Certificate IV" }), _jsx("option", { children: "Diploma" }), _jsx("option", { children: "Advanced Diploma" })] }))] }), _jsxs("div", { className: "flex justify-end gap-3 pt-2", children: [_jsx("button", { onClick: onClose, className: "text-sm text-gray-600", children: "Cancel" }), _jsx("button", { onClick: onApply, className: "bg-indigo-600 text-white px-4 py-1.5 rounded-md text-sm font-medium", children: "Apply" })] })] }) }));
}
